create database Box8

create table Country
(
CountryID int identity (1,1) primary key,
CountryName nvarchar(max) not null,
Currency nvarchar(5)
)
create table State
(
StateID int identity (1,1) primary key,
CountryID int references Country(CountryID),
StateName nvarchar(max) not null
)
create table City
(
--Bagalore
CityID int identity (1,1) primary key,StateID int references State (StateID),
CityName nvarchar(max) not null
)
create table City_SubLocation
(
--- BTM
SubLocationID int identity (1,1) primary key,
CityID int references City (CityID),
SubLocationName nvarchar(max) not null
)

Create table LocalArea
(
-- axa
LocalAreaID int identity(1,1) primary key,
SubLocationID int references City_SubLocation(SubLocationID),
AreaName nvarchar(max) not null
)

Create table Main_Menu_Category
(
CategoryID int identity(1,1) primary key,
CategoryName nvarchar(250) not null,
CategoryImage nvarchar(max)
)

create table Category_Items
(
ItemID int identity (1,1) primary key,
CategoryID int references Main_Menu_Category(CategoryID),
ItemType int,--Enum value 0- Veg,1-non-veg,
MenuName nvarchar(max) not null,
MenuDescription nvarchar(max) not null,
Price decimal not null,
ItemImage nvarchar(max),
)

create table localAreaMenuItems
(
UniqueID int identity (1,1) primary key,
ItemID int references Category_Items(ItemID),
AreaID int references LocalArea(LocalAreaID)
)


insert into Country (CountryName,Currency) values('India','INR')
insert into State ( StateName,CountryID) values('Karnataka',1)
insert into City ( CityName,StateID) values ( 'Bangalore',1)
insert into City_SubLocation ( CityID,SubLocationName) values (1,'BTM'),(1,'Koramangala'),(1,'Marathahali'),(1,'ITPL')
insert into LocalArea ( SubLocationID,AreaName)  values (1,'Axa Building'),(1,'16th Main'), (1,'Water tank'),(2,'NGV'),(3,'Marathali bridge'),(4,'Back gate')




create procedure dbo.GetSearchedLocationdetails(
 @SearchedLocation  nvarchar(max)
)
as
begin

select AreaName as AreaName,LocalAreaID as AreaID,2 as IsLocalArea
from dbo.LocalArea  with(nolock)
where AreaName like '%'+@SearchedLocation+'%'
union all
select SubLocationName as AreaName,SubLocationID as AreaID,1 as IsLocalArea
from City_SubLocation
where SubLocationName like '%'+@SearchedLocation+'%'
union all
select CityName as AreaName,CityID as AreaID,0 as IsLocalArea
from City
where CityName like '%'+@SearchedLocation+'%'

end


create procedure GetLocations(@searchCriteria nvarchar(max), @id int,@type nvarchar(max))
as 
begin

declare @locationType int

if(@type ='Country')
  set @locationType=1
else if(@type ='State')
  set @locationType=2
else if(@type ='City')
  set @locationType=3
else if(@type ='SubLocation')
  set @locationType=4
else if(@type ='LocalArea')
  set @locationType=5
else 
  set @locationType=0



declare @query nvarchar(max)
set @query='';

--local Area selection
set @query +=
         ' select LocalAreaID as id, AreaName as name,''LocalArea'' as type
           from LocalArea 
           where AreaName like %'+@searchCriteria+'% '


-- sub location selection
if(@locationType<4)
begin
  set @query +=
        ' union all
          select SubLocationID as id, SubLocationName as name,''SubLocation'' as  type
          from City_SubLocation 
          where SubLocationName like %'+@searchCriteria+'% '

if(@locationType=3)
  set  @query +=' and SubLocationID= '+@id
end


-- City selection
if(@locationType<3)
begin
  set @query +=
          ' union all
          select CityID as ID,CityName as name,''City'' as type
          from City 
          where CityName like %'+@searchCriteria+'% '

if(@locationType=2)
  set  @query +=' and CityID= '+@id
end 


-- State selection
if(@locationType<2)
begin

set @query +=
           ' union all
           select StateID as id,StateName as name, ''State'' as type
           from State 
           where StateName like %'+@searchCriteria+'% '

if(@locationType=1)
  set  @query +=' and StateID= '+@id
end


--- Country selection
if(@locationType<1)
begin
set @query +=
          ' union all
           select CountryID as ID,CountryName as name, ''Country'' as type
          from Country 
          where CountryName like %'+@searchCriteria+'% '

if ( @id>0)
set @query += ' and CountryID='+@id


end

end 


alter procedure GetLocations(@searchCriteria nvarchar(max), @id int,@type nvarchar(max))
as 
begin

declare @locationType int

if(@type ='Country')
  set @locationType=1
else if(@type ='State')
  set @locationType=2
else if(@type ='City')
  set @locationType=3
else if(@type ='SubLocation')
  set @locationType=4
else if(@type ='LocalArea')
  set @locationType=5
else 
  set @locationType=0



declare @query nvarchar(max)
set @query='';

--local Area selection
set @query +=
         ' select LocalAreaID as id, AreaName as name,''LocalArea'' as type
           from LocalArea 
           where AreaName like %'+@searchCriteria+'% '


-- sub location selection
if(@locationType<4)
begin
  set @query +=
        ' union all
          select SubLocationID as id, SubLocationName as name,''SubLocation'' as  type
          from City_SubLocation 
          where SubLocationName like %'+@searchCriteria+'% '

if(@locationType=3)
  set  @query +=' and SubLocationID= '+@id
end


-- City selection
if(@locationType<3)
begin
  set @query +=
          ' union all
          select CityID as ID,CityName as name,''City'' as type
          from City 
          where CityName like %'+@searchCriteria+'% '

if(@locationType=2)
  set  @query +=' and CityID= '+@id
end 


-- State selection
if(@locationType<2)
begin

set @query +=
           ' union all
           select StateID as id,StateName as name, ''State'' as type
           from State 
           where StateName like %'+@searchCriteria+'% '

if(@locationType=1)
  set  @query +=' and StateID= '+@id
end
print 1

--- Country selection
if(@locationType<1)
begin
set @query +=
          ' union all
           select CountryID as ID,CountryName as name, ''Country'' as type
          from Country 
          where CountryName like %'+@searchCriteria+'% '

if ( @id>0)
set @query += ' and CountryID='+@id


end

select (@query)
exec sp_executesql @query

end 
